#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

mktmpdir () {
  dir=$(mktemp -t fakesu-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

indent () {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

run () {
  cmd="$*"
  echo "Running: $cmd" >> $BUILD_LOG
  echo "-------------" >> $BUILD_LOG
  $($cmd >> $BUILD_LOG 2>&1)
  if [ $? -ne 0 ]
  then
    echo "Error running $cmd in $(pwd -P), log appears below."
    cat $BUILD_LOG
    exit 1
  fi
  echo >> $BUILD_LOG
}

BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`
BUILD_DIR=$1
CACHE_DIR=$2
BUILD_LOG="$BUILD_DIR/build.log"
touch $BUILD_LOG

WGET_BUILD="$(mktmpdir wget)"
DEBOOTSTRAP_BUILD="$(mktmpdir debootstrap)"
DEBOOTSTRAP_VER="debootstrap_1.0.46"
DEBOOTSTRAP_FILE="$DEBOOTSTRAP_VER.tar.gz"
FAKECHROOT_BUILD="$(mktmpdir fakechroot)"

mkdir -p $CACHE_DIR/.tools/{wget,debootstrap,fakechroot}

export PATH=/sbin:/usr/sbin:$PATH:$CACHE_DIR/.tools/wget/bin:$CACHE_DIR/.tools/debootstrap/usr/sbin:$BUILD_DIR/.tools/fakechroot/sbin:$BUILD_DIR/.tools/fakechroot/bin
export DEBOOTSTRAP_DIR=$CACHE_DIR/.tools/debootstrap/usr/share/debootstrap

echo "-----> Fetching and installing wget"
if [ -d $CACHE_DIR/.tools/wget ]
then
  echo "Cached" | indent
else
  cd $WGET_BUILD
  run curl -O http://ftp.gnu.org/gnu/wget/wget-1.13.4.tar.bz2
  run tar jxvf wget-1.13.4.tar.bz2
  cd wget-1.13.4
  run ./configure --prefix=$CACHE_DIR/.tools/wget --without-ssl
  run make
  run make install
  echo "Installed" | indent
fi

echo "-----> Fetching and installing debootstrap"
if [ -d $CACHE_DIR/.tools/debootstrap ]
then
  echo "Cached" | indent
else
  cd $DEBOOTSTRAP_BUILD
  run wget http://archive.ubuntu.com/ubuntu/pool/main/d/debootstrap/$DEBOOTSTRAP_FILE
  run tar zxvf $DEBOOTSTRAP_FILE
  cd debootstrap*
  DESTDIR=$CACHE_DIR/.tools/debootstrap run fakeroot make
  DESTDIR=$CACHE_DIR/.tools/debootstrap run fakeroot make install
  echo "Installed" | indent
fi

echo "-----> Fetching, installing and vendoring fakechroot into /app/.tools/fakechroot"
if [ -d $CACHE_DIR/.tools/fakechroot ]
then
  echo "Cached" | indent
else
  cd $FAKECHROOT_BUILD
  run git clone git://github.com/fabiokung/fakechroot.git
  cd fakechroot
  run ./autogen.sh
  run ./configure --prefix=$CACHE_DIR/.tools/fakechroot
  run make
  run make install
  echo "Installed" | indent
fi
cp -v -R $CACHE_DIR/.tools/fakechroot $BUILD_DIR/.tools/
find $CACHE_DIR/.tools/fakechroot
find $BUILD_DIR/.tools/fakechroot

cd $BUILDPACK_DIR

echo "-----> Bootstraping a new base ubuntu lucid into /app/.root/"
if [ -d $CACHE_DIR/.root ]
then
  echo "Cached" | indent
else
  mkdir -p $CACHE_DIR/.root
  run fakechroot -s fakeroot debootstrap --no-check-gpg --variant=fakechroot lucid $CACHE_DIR/.root
  run fakechroot fakeroot chroot $CACHE_DIR/.root apt-get install -y --force-yes gpgv
  echo "/app/.root bootstraped" | indent

  sed -i -e "s/#force_color_prompt=yes/force_color_prompt=yes/" $CACHE_DIR/.root/root/.bashrc
  echo "export PATH=/sbin:/usr/sbin:\$PATH" >> $CACHE_DIR/.root/root/.bashrc
  echo "cd $HOME" >> $CACHE_DIR/.root/root/.bashrc

  echo "-----> Updating packages"
  fakechroot fakeroot chroot $CACHE_DIR/.root bash -c "cat > /etc/apt/sources.list <<EOF
  deb http://archive.ubuntu.com/ubuntu lucid main universe
  deb http://archive.ubuntu.com/ubuntu lucid-security main
  deb http://archive.ubuntu.com/ubuntu lucid-updates main
  EOF"
  run fakechroot fakeroot chroot $CACHE_DIR/.root apt-get update
  echo "Packages updated" | indent
fi
cp -R $CACHE_DIR/.root $BUILD_DIR/

cd $BUILD_DIR/.root
ln -s ../ app

mkdir -p $BUILD_DIR/bin
cp $BUILDPACK_DIR/bin/fakesu $BUILD_DIR/bin
cp $BUILDPACK_DIR/bin/aws $BUILD_DIR/bin
cp $BUILDPACK_DIR/bin/sudo $BUILD_DIR/bin
cp $CACHE_DIR/.tools/wget/bin/wget $BUILD_DIR/bin

if [ -f $1/.after_fakesu ]; then
  echo "------> Running after hook"
  chmod 700 $1/.after_fakesu
  run $1/.after_fakesu $BUILD_DIR $CACHE_DIR
  echo "After hook ran" | indent
fi

exit 0

